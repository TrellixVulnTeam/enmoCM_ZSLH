{"version":3,"file":"ngx-color-github.js","sources":["../../../../src/lib/components/github/github-swatch.component.ts","../../../../src/lib/components/github/github.component.ts","../../../../src/lib/components/github/ngx-color-github.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;MA4Ba,qBAAqB;AAClC,IA3BA;AACG,QA2BS,YAAO,GAAG,IAAI,YAAY,EAAO,CAAC;AAC9C,QAAY,kBAAa,GAAG,IAAI,YAAY,EAAO,CAAC;AACpD,QAAE,eAAU,GAAG;AACf,YAAI,QAAQ,EAAE,UAAU;AACxB,YAAI,SAAS,EAAE,GAAG;AAClB,YAAI,OAAO,EAAE,gBAAgB;AAC7B,YAAI,YAAY,EAAE,8BAA8B;AAChD,SAAG,CAAC;AACJ,KAIC;AACD,IAJE,WAAW,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE;AAC7B,QAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;AACvC,KAAG;AACH;iDAxCC,SAAS,SAAC,kBACT,QAAQ,EAAE,qBAAqB;eAC/B,QAAQ,EAAE,mSAWT,kBAUD,eAAe,EAAE,uBAAuB,CAAC,MAAM,kBAC/C,mBAAmB;CAAE,KAAK,2BATxB;;uCAMC,eAIJ;;;;;;;mMACI;AAAC;AACI,oBAAP,KAAK;AAAK,sBACV,MAAM;AAAK,4BACX,MAAM;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MC2DJ,eAAgB,SAAQ,SAAS;AAC9C,IAuBE;AACF,QAAI,KAAK,EAAE,CAAC;AACZ;AAEuC,QA1B5B,UAAK,GAAoB,GAAG,CAAC;AACxC;AACM,QAAK,WAAM,GAAG;AACpB,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AACb,SAAG,CAAC;AACJ,QAAW,aAAQ,GAAuD,UAAU,CAAC;AACrF,KAGG;AACH,IACE,iBAAiB,CAAC,EAAE,GAAG,EAAE,MAAM,EAAkC;AACnE,QAAI,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE;AACzB,YAAM,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC;AACxD,SAAK;AACL,KAAG;AACH,IAAE,iBAAiB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;AACpC,QAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACpC,KAAG;AACH;2CAnHC,SAAS,SAAC,kBACT,QAAQ,EAAE;EAAc,kBACxB,QAAQ,EAAE,mYAYT,kBA8DD,eAAe,EAAE;WAAuB,CAAC,MAAM,kBAC/C;cAAmB,EAAE,KAAK;SA7DxB;;;;;;;;w1BA0DD,eAIF,g7BACI;AAAC;AACN;AAAmC,oBAChC,KAAK;AAAK,qBAEV,KAAK;AAAK,uBAkBV,KAAK;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC,MAqBF,iBAAiB;AAAG;6CALhC,QAAQ,SAAC,kBACR,YAAY,EAAE,CAAC;GAAe,EAAE,qBAAqB,CAAC,kBACtD,OAAO,EAAE,CAAC,eAAe,EAAE;cAAqB,CAAC,kBACjD,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC,eACtC;;;;;;;;;0BACI;AAAC;ACrIN;AACA;AACA;AACA;AACA;AAEuC","sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'color-github-swatch',\n  template: `\n    <div class=\"github-swatch\">\n      <color-swatch\n        [color]=\"color\"\n        [focusStyle]=\"focusStyle\"\n        (onClick)=\"handleClick($event)\"\n        (onHover)=\"onSwatchHover.emit($event)\"\n        class=\"swatch\"\n      ></color-swatch>\n      <div class=\"clear\"></div>\n    </div>\n  `,\n  styles: [\n    `\n      .github-swatch {\n        width: 25px;\n        height: 25px;\n        font-size: 0;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class GithubSwatchComponent {\n  @Input() color!: string;\n  @Output() onClick = new EventEmitter<any>();\n  @Output() onSwatchHover = new EventEmitter<any>();\n  focusStyle = {\n    position: 'relative',\n    'z-index': '2',\n    outline: '2px solid #fff',\n    'box-shadow': '0 0 5px 2px rgba(0,0,0,0.25)',\n  };\n\n  handleClick({ hex, $event }) {\n    this.onClick.emit({ hex, $event });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgModule,\n} from '@angular/core';\n\nimport { ColorWrap, SwatchModule, isValidHex } from 'ngx-color';\nimport { GithubSwatchComponent } from './github-swatch.component';\n\n@Component({\n  selector: 'color-github',\n  template: `\n  <div class=\"github-picker {{ triangle }}-triangle {{ className }}\"\n    [style.width.px]=\"width\"\n  >\n    <div class=\"triangleShadow\"></div>\n    <div class=\"triangle\"></div>\n    <color-github-swatch *ngFor=\"let color of colors\"\n      [color]=\"color\"\n      (onClick)=\"handleBlockChange($event)\"\n      (onSwatchHover)=\"onSwatchHover.emit($event)\"\n    ></color-github-swatch>\n  </div>\n  `,\n  styles: [\n    `\n  .github-picker {\n    background: rgb(255, 255, 255);\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 12px;\n    border-radius: 4px;\n    position: relative;\n    padding: 5px;\n    display: flex;\n    flex-wrap: wrap;\n    box-sizing: border-box;\n  }\n  .triangleShadow {\n    position: absolute;\n    border-width: 8px;\n    border-style: solid;\n    border-color: transparent transparent rgba(0, 0, 0, 0.15);\n    border-image: initial;\n  }\n  .triangle {\n    position: absolute;\n    border-width: 7px;\n    border-style: solid;\n    border-color: transparent transparent rgb(255, 255, 255);\n    border-image: initial;\n  }\n  .hide-triangle > .triangle {\n    display: none;\n  }\n  .hide-triangle > .triangleShadow {\n    display: none;\n  }\n  .top-left-triangle > .triangle {\n    top: -14px;\n    left: 10px;\n  }\n  .top-left-triangle > .triangleShadow {\n    top: -16px;\n    left: 9px;\n  }\n  .top-right-triangle > .triangle {\n    top: -14px;\n    right: 10px;\n  }\n  .top-right-triangle > .triangleShadow {\n    top: -16px;\n    right: 9px;\n  }\n  .bottom-right-triangle > .triangle {\n    top: 35px;\n    right: 10px;\n    transform: rotate(180deg);\n  }\n  .bottom-right-triangle > .triangleShadow {\n    top: 37px;\n    right: 9px;\n    transform: rotate(180deg);\n  }\n  `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class GithubComponent extends ColorWrap {\n  /** Pixel value for picker width */\n  @Input() width: string | number = 212;\n  /** Color squares to display */\n  @Input() colors = [\n    '#B80000',\n    '#DB3E00',\n    '#FCCB00',\n    '#008B02',\n    '#006B76',\n    '#1273DE',\n    '#004DCF',\n    '#5300EB',\n    '#EB9694',\n    '#FAD0C3',\n    '#FEF3BD',\n    '#C1E1C5',\n    '#BEDADC',\n    '#C4DEF6',\n    '#BED3F3',\n    '#D4C4FB',\n  ];\n  @Input() triangle: 'hide' | 'top-left' | 'top-right' | 'bottom-right' = 'top-left';\n\n  constructor() {\n    super();\n  }\n\n  handleBlockChange({ hex, $event }: { hex: string, $event: Event }) {\n    if (isValidHex(hex)) {\n      this.handleChange({ hex, source: 'hex' }, $event);\n    }\n  }\n  handleValueChange({ data, $event }) {\n    this.handleChange(data, $event);\n  }\n}\n\n@NgModule({\n  declarations: [GithubComponent, GithubSwatchComponent],\n  exports: [GithubComponent, GithubSwatchComponent],\n  imports: [CommonModule, SwatchModule],\n})\nexport class ColorGithubModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './github.component';\n\nexport {GithubSwatchComponent as Éµa} from './github-swatch.component';"]}